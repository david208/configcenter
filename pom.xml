<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.yizhenmoney.damocles</groupId>
	<artifactId>damocles-configcenter</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>damocles-configcenter</name>
	<url>测试</url>

	<modules>
		<module>damocles-configcenter-console</module>
		<module>damocles-configcenter-client</module>
	</modules>

	<properties>
		<damocles-client.version>1.0.13</damocles-client.version>
		<springside.version>4.3.0.YZ</springside.version>
		<spring.version>4.1.1.RELEASE</spring.version>
		<hibernate.version>4.3.5.Final</hibernate.version>
		<spring-data-jpa.version>1.6.0.RELEASE</spring-data-jpa.version>
		<sitemesh.version>2.4.2</sitemesh.version>
		<druid.version>1.0.9</druid.version>
		<tomcat-jdbc.version>7.0.54</tomcat-jdbc.version>
		<shiro.version>1.2.3</shiro.version>
		<spring-security.version>3.1.1.RELEASE</spring-security.version>
		<activemq.version>5.7.0</activemq.version>
		<hibernate-validator.version>5.0.3.Final</hibernate-validator.version>
		<jackson.version>2.4.0</jackson.version>
		<dom4j.version>1.6.1</dom4j.version>
		<jaxen.version>1.1.6</jaxen.version>
		<aspectj.version>1.7.4</aspectj.version>
		<slf4j.version>1.7.7</slf4j.version>
		<logback.version>1.1.2</logback.version>
		<commons-lang3.version>3.3.2</commons-lang3.version>
		<guava.version>17.0</guava.version>
		<log4jdbc.version>1.2</log4jdbc.version>
		<httpclient.version>4.3.2</httpclient.version>
		<freemarker.version>2.3.21</freemarker.version>
		<dozer.version>5.5.1</dozer.version>
		<commons-io.version>2.4</commons-io.version>
		<joda-time.version>2.3</joda-time.version>

		<junit.version>4.11</junit.version>
		<assertj.version>1.6.1</assertj.version>
		<mockito.version>1.9.5</mockito.version>
		<selenium.version>2.43.1</selenium.version>
		<jetty.version>7.6.15.v20140411</jetty.version>
		<h2.version>1.3.176</h2.version>
		<mysql.version>5.1.22</mysql.version>
		<ojdbc.version>14</ojdbc.version>
		<hystrix.version>1.3.16</hystrix.version>
		<jolokia.version>1.2.2</jolokia.version>
		<javasimon.version>3.5.1</javasimon.version>
		<javax.inject-version>1</javax.inject-version>
		<javax.servlet-api-version>3.1.0</javax.servlet-api-version>
		<javax.servlet-jstl-version>1.2</javax.servlet-jstl-version>
		<dubbo.version>2.5.3</dubbo.version>
		<poi.version>3.9</poi.version>
		<fileUpload.version>1.3.1</fileUpload.version>
		<!-- sms -->
		<jianzhou.version>6.0</jianzhou.version>

		<!-- Plugin的属性定义 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>
		<zookeeper.version>3.3.3</zookeeper.version>
		<zkclient.version>0.1</zkclient.version>
		<curator.version>1.1.16</curator.version>
		<log4jover.version>1.7.8</log4jover.version>
		<log4jdbc.version>1.2</log4jdbc.version>
		<log4jjcl.version>1.7.8</log4jjcl.version>
		<log4jjul.version>1.7.8</log4jjul.version>
		
	</properties>

	<!-- 预定义依赖项的version,scope与exclusions,子项目中只需定义groupId 与 artifactId 即可 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-scratchpad</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<!-- SPRINGSIDE begin -->
			<dependency>
				<groupId>org.springside</groupId>
				<artifactId>springside-utils</artifactId>
				<version>${springside.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springside</groupId>
				<artifactId>springside-core</artifactId>
				<version>${springside.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springside</groupId>
				<artifactId>springside-extension</artifactId>
				<version>${springside.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springside</groupId>
				<artifactId>springside-metrics</artifactId>
				<version>${springside.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springside</groupId>
				<artifactId>springside-redis</artifactId>
				<version>${springside.version}</version>
			</dependency>
			<!-- SPRINGSIDE end -->

			<!-- spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${fileUpload.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- WEB begin -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>opensymphony</groupId>
				<artifactId>sitemesh</artifactId>
				<version>${sitemesh.version}</version>
			</dependency>
			<!-- WEB end -->

			<!-- PERSISTENCE begin -->
			<!-- hibernate -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entityManager</artifactId>
				<version>${hibernate.version}</version>
			</dependency>

			<!-- spring data access -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${spring-data-jpa.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>spring-orm</artifactId>
						<groupId>org.springframework</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- spring aop -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${aspectj.version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- connection pool -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${druid.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-jdbc</artifactId>
				<version>${tomcat-jdbc.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>ojdbc</groupId>
				<artifactId>ojdbc</artifactId>
				<version>${ojdbc.version}</version>
				<scope>runtime</scope>
			</dependency>

			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
				<scope>runtime</scope>
			</dependency>

			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
				<scope>runtime</scope>
			</dependency>
			<!-- PERSISTENCE end -->

			<!-- SECURITY begin -->

			<!-- shiro -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-spring</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-ehcache</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.9</version>
			</dependency>

			<!-- spring security -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${spring-security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
				<version>${spring-security.version}</version>
			</dependency>
			<!-- SECURITY end -->

			<!-- JSR303 BeanValidator -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>

			<!-- JSON begin -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.module</groupId>
				<artifactId>jackson-module-jaxb-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<!-- JSON end -->

			<!-- XML begin -->
			<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>${dom4j.version}</version>
				<exclusions>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- 重新定义Java XPath Engine到最新版，避免旧版那些不必要的依赖 -->
			<dependency>
				<groupId>jaxen</groupId>
				<artifactId>jaxen</artifactId>
				<version>${jaxen.version}</version>
			</dependency>
			<!-- XML end -->

			<!-- LOGGING begin -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- 代码直接调用log4j会被桥接到slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>
			<!-- 代码直接调用common-logging会被桥接到slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>
			<!-- 代码直接调用java.util.logging会被桥接到slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>

			<dependency>
				<groupId>com.googlecode.log4jdbc</groupId>
				<artifactId>log4jdbc</artifactId>
				<version>${log4jdbc.version}</version>
				<scope>runtime</scope>
			</dependency>
			<!-- LOGGING end -->

			<!-- GENERAL UTILS begin -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<!-- joda -->
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda-time.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time-jsptags</artifactId>
				<version>1.1.1</version>
			</dependency>
			<!-- joda for jackson -->
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-joda</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<!-- GENERAL UTILS end -->

			<!-- httpclient -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>fluent-hc</artifactId>
				<version>${httpclient.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>${httpclient.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>${httpclient.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- template engine -->
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>${freemarker.version}</version>
			</dependency>

			<!-- JMS -->
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-core</artifactId>
				<version>${activemq.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.activemq.protobuf</groupId>
						<artifactId>activemq-protobuf</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework.osgi</groupId>
						<artifactId>spring-osgi-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.osgi</groupId>
						<artifactId>org.osgi.core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.fusesource.mqtt-client</groupId>
						<artifactId>mqtt-client</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.activemq</groupId>
						<artifactId>kahadb</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jms</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- pojo copy -->
			<dependency>
				<groupId>net.sf.dozer</groupId>
				<artifactId>dozer</artifactId>
				<version>${dozer.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- dubbo -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>dubbo</artifactId>
				<version>${dubbo.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>${zookeeper.version}</version>

			</dependency>
			<dependency>
				<groupId>com.github.sgroschupf</groupId>
				<artifactId>zkclient</artifactId>
				<version>${zkclient.version}</version>
			</dependency>
			<dependency>
				<groupId>com.netflix.curator</groupId>
				<artifactId>curator-framework</artifactId>
				<version>${curator.version}</version>
			</dependency>
			<!-- commons-pool -->
			<!-- email -->
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>1.4.7</version>
			</dependency>
			<dependency>
				<groupId>javax.activation</groupId>
				<artifactId>activation</artifactId>
				<version>1.1.1</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>

			<!-- @Inject -->
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>${javax.inject-version}</version>
			</dependency>

			<dependency>
				<groupId>com.jianzhou</groupId>
				<artifactId>jzsms</artifactId>
				<version>${jianzhou.version}</version>
			</dependency>

			<!-- Servlet -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${javax.servlet-api-version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${javax.servlet-jstl-version}</version>
			</dependency>

			<!-- TEST begin -->
			<dependency>
				<groupId>org.springside</groupId>
				<artifactId>springside-core</artifactId>
				<version>${springside.version}</version>
				<classifier>tests</classifier>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springside</groupId>
				<artifactId>springside-extension</artifactId>
				<version>${springside.version}</version>
				<classifier>tests</classifier>
				<scope>test</scope>
			</dependency>


			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.eclipse.jetty.aggregate</groupId>
				<artifactId>jetty-webapp</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-jsp</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- hystrix begin -->
			<dependency>
				<groupId>com.netflix.hystrix</groupId>
				<artifactId>hystrix-core</artifactId>
				<version>${hystrix.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- hystrix end -->

			<!-- jolokia Restful JMX begin -->
			<dependency>
				<groupId>org.jolokia</groupId>
				<artifactId>jolokia-core</artifactId>
				<version>${jolokia.version}</version>
			</dependency>
			<!-- jolokia end -->

			<!-- Monitor begin -->
			<!-- javasimon -->
			<dependency>
				<groupId>org.javasimon</groupId>
				<artifactId>javasimon-spring</artifactId>
				<version>${javasimon.version}</version>
			</dependency>
			<dependency>
				<groupId>org.javasimon</groupId>
				<artifactId>javasimon-jdbc4</artifactId>
				<version>${javasimon.version}</version>
			</dependency>
			<dependency>
				<groupId>org.javasimon</groupId>
				<artifactId>javasimon-console-embed</artifactId>
				<version>${javasimon.version}</version>
			</dependency>
			<!-- Monitor end -->

			<!-- selenium 2.0 -->
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-java</artifactId>
				<version>${selenium.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.seleniumhq.selenium</groupId>
						<artifactId>selenium-android-driver</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.seleniumhq.selenium</groupId>
						<artifactId>selenium-iphone-driver</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.seleniumhq.selenium</groupId>
						<artifactId>selenium-htmlunit-driver</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.seleniumhq.selenium</groupId>
						<artifactId>selenium-safari-driver</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-remote-driver</artifactId>
				<version>${selenium.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>cglib</groupId>
						<artifactId>cglib-nodep</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- smtp server simulator -->
			<dependency>
				<groupId>com.icegreen</groupId>
				<artifactId>greenmail</artifactId>
				<version>1.3.1b</version>
				<scope>test</scope>
			</dependency>
			<!-- 代码直接调用log4j会被桥接到slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${log4jover.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${log4jjcl.version}</version>
			</dependency>
			<!-- 代码直接调用common-logging会被桥接到slf4j -->
			<!-- 代码直接调用java.util.logging会被桥接到slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${log4jjul.version}</version>
			</dependency>

			<dependency>
				<groupId>com.googlecode.log4jdbc</groupId>
				<artifactId>log4jdbc</artifactId>
				<version>${log4jdbc.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<!-- 插件配置 -->
	<build>
		<pluginManagement>
			<plugins>
				<!-- compiler插件, 设定JDK版本 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<showWarnings>true</showWarnings>
					</configuration>
				</plugin>

				<!-- war打包插件, 设定war包名称不带版本号 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<warName>${project.artifactId}</warName>
					</configuration>
				</plugin>

				<!-- test插件, 仅测试名称为*Test的类,使用支持分组测试的surefire-junit47 driver -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.16</version>
					<configuration>
						<includes>
							<include>**/*Test.java</include>
						</includes>
						<argLine>-Xmx256M</argLine>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit47</artifactId>
							<version>2.16</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- cobertura插件, 设置不需要计算覆盖率的类 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<instrumentation>
							<excludes>
								<exclude>**/entity/**/*.class</exclude>
								<exclude>**/*Controller.class</exclude>
							</excludes>
						</instrumentation>
					</configuration>
				</plugin>

				<!-- enforcer插件, 避免被依赖的依赖引入过期的jar包 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.3.1</version>

					<executions>
						<execution>
							<id>enforce-banned-dependencies</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireMavenVersion>
										<version>3.0.3</version>
									</requireMavenVersion>
									<requireJavaVersion>
										<version>1.6</version>
									</requireJavaVersion>
									<bannedDependencies>
										<searchTransitive>true</searchTransitive>
										<excludes>
											<exclude>commons-logging</exclude>
											<exclude>aspectj:aspectj*</exclude>
											<exclude>org.springframework</exclude>
										</excludes>
										<includes>
											<include>org.springframework:*:4.0.*</include>
										</includes>
									</bannedDependencies>
								</rules>
								<fail>true</fail>
							</configuration>
						</execution>
					</executions>

				</plugin>

				<!-- jetty插件, 设定context path与spring profile -->
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>${jetty.version}</version>
					<configuration>
						<systemProperties>
							<systemProperty>
								<name>spring.profiles.active</name>
								<value>development</value>
							</systemProperty>
						</systemProperties>
						<useTestClasspath>true</useTestClasspath>

						<webAppConfig>
							<contextPath>/${project.artifactId}</contextPath>
						</webAppConfig>
					</configuration>

				</plugin>

				<!-- resources插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
				</plugin>

				<!-- install插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.1</version>
				</plugin>

				<!-- ant插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
				</plugin>

				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>test-compile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>

								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>

							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<!-- 增加functional test的Source目录 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.8</version>
					<executions>
						<execution>
							<id>add-functional-source</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-test-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>src/test/functional</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<distributionManagement>
		<repository>
			<id>nexus</id>
			<name>Team Nexus Repository</name>
			<url>http://192.168.220.207:8081/content/repositories/thirdparty/</url>
		</repository>
	</distributionManagement>
</project>
